@model IQueryable<StudentFarm.Models.Availability>

@{
    ViewBag.Title = "Ordering Guides";

    DateTime weekbegin = ViewBag.WeekBegin;
}

@section subhead {
    <h2>Ordering Guides</h2>
    <h3>@ViewBag.test</h3>
}

<a class="btn btn-primary main-action" href="@(ViewBag.url)availability/create">
    <i class="icon-plus"></i> Add Fresh Doohickey
</a>
<h3>Current Offers</h3>
<table class="table table-hover">
    <thead>
        <tr>
            <th>From</th>
            <th>To</th>
            <th>No. Items</th>
            <th>Offered To</th>
            <th>&nbsp;</th>
        </tr>
    </thead>
    <tbody>
    @foreach (var avail in Model.Where(av => av.DateEnd.CompareTo(DateTime.Now) >= 0).OrderBy(av => av.DateEnd))
    {
        <tr>
            <td>@avail.DateStart.ToShortDateString()</td>
            <td>@avail.DateEnd.ToShortDateString()</td>
            <td>@avail.Offered.Count</td>
            <td>@avail.GetBuyerNames()</td>
            <td class="actions-column wide"><a class="btn btn-primary" href="@(ViewBag.url)availability/create/@avail.Id"><i class="icon-retweet"></i> Copy</a> <a class="btn btn-success" href="@(ViewBag.url)availability/edit/@avail.Id"><i class="icon-pencil"></i> Edit</a> <a class="btn btn-warning" href="@(ViewBag.url)availability/delete/@avail.Id" title="Delete"><i class="icon-remove"></i></a>
        </tr>
    }
    </tbody>
</table>
    
<h3>Offers from the <span class="timeunit">Week</span> starting <span id="weekof">@weekbegin.ToShortDateString()</span></h3>
<form id="picker">
    <h4>View offers from between
        @Html.AntiForgeryToken()
        <input type="text" id="picker_s" name="start" value="@weekbegin.ToShortDateString()" />
        and
        <input type="text" id="picker_e" name="end" value="@weekbegin.AddDays(7).ToShortDateString()" />
    </h4>
</form>
<table class="table table-hover">
    <thead>
        <tr>
            <th>From</th>
            <th>To</th>
            <th>No. Items</th>
            <th>Offered To</th>
            <th>Total Ordered</th>
            <th>&nbsp;</th>
        </tr>
    </thead>
    <tbody id="displayer">
    @foreach (var avail in Model.Where(av => av.DateEnd.CompareTo(weekbegin) >= 0).OrderBy(av => av.DateEnd))
    {
        <tr>
            <td>@avail.DateStart.ToShortDateString()</td>
            <td>@avail.DateEnd.ToShortDateString()</td>
            <td>@avail.Offered.Count</td>
            <td>@avail.GetBuyerNames()</td>
            <td>// TODO</td>
            <td class="actions-column">
                <a class="btn btn-primary" href="@(ViewBag.url)availability/create/@avail.Id"><i class="icon-retweet"></i> Copy</a> <a class="btn" href="@(ViewBag.url)availability/details/@avail.Id"><i class="icon-file"></i> View</a>
            </td>
        </tr>
    }
    </tbody>
</table>
<a id="prev" class="btn prev" href="#"><i class="icon-chevron-left"></i> Previous <span class="timeunit">Week</span></a>
<a id="next" class="btn next" href="#">Next <span class="timeunit">Week</span> <i class="icon-chevron-right"></i></a>

@section AdditionalScripts {
    <script type="text/javascript">
        var dates = { begin: 'picker_s', end: 'picker_e' };
        var pickform = document.getElementById('picker');

        for (var i in dates) {
            var id = '#' + dates[i];
            $(id).datepicker({
                onSelect: function () {
                    $(this).change();
                }
            });

            // Fires when date is selected in calendar (due to onSelect handler, above)
            // or when textbox changes.
            $(id).change(function () {
                var start = pickform.start.value;
                var end = pickform.end.value;

                // Don't do anything if period end date is before period begin date
                if (Date.parse(end) >= Date.parse(start)) {
                    // Make XHR call with both dates to get new data.
                    $.post('@(ViewBag.url)availability' + '/offersfrom',
                        $(pickform).serialize(),
                        function success(data, status) {
                            $('.timeunit').each(function (i, el) {
                                el.innerHTML = data.unit;
                            });
                            document.getElementById('weekof').innerHTML = pickform.start.value;

                            var disp = document.getElementById('displayer');
                            disp.innerHTML = data.offers;
                        });
                }
            });
        }

        document.getElementById('prev').addEventListener('click', function (e) {
            e.preventDefault();
            e.stopPropagation();

            var start = pickform.start.value;
            var end = pickform.end.value;

            // Subtract time interval from start to figure out new starting date
            var diff = Date.parse(end) - Date.parse(start);
            var new_start = new Date(Date.parse(start) - diff);
            pickform.end.value = pickform.start.value;
            pickform.start.value = (new_start.getMonth() + 1) + "/" + new_start.getDate() + "/" + new_start.getFullYear();

            // Fire off change event
            $(pickform.start).change();
        });

        document.getElementById('next').addEventListener('click', function (e) {
            e.preventDefault();
            e.stopPropagation();

            var start = pickform.start.value;
            var end = pickform.end.value;

            // Add time interval to end to figure out new end date
            var diff = Date.parse(end) - Date.parse(start);
            var new_end = new Date(Date.parse(end) + diff);
            pickform.start.value = pickform.end.value;
            pickform.end.value = (new_end.getMonth() + 1) + "/" + new_end.getDate() + "/" + new_end.getFullYear();

            // Fire off change event
            $(pickform.start).change();
        });

        // Fire off change event on page load in case the date in the textbox is different from
        // the default date.
        if (pickform.start.value != document.getElementById('weekof').value) {
            $(pickform.start).change();
        }
    </script>
}